openapi: "3.0.0"
info:
  title: "Wutsi Payment API"
  description: |
    API for managing payments.
    This API allows to
    - Cash in: Move money from owner's account into the wallet
    - Cash out: Move monet from wallet to owner's account
    - Transfer: Transfer money between wallets
    - Search transactions
  version: "1.0.0"

servers:
  - url: https://wutsi-payment-server-test.herokuapp.com
    description: Sandbox
  - url: https://wutsi-payment-server-prod.herokuapp.com
    description: Production

paths:
  /v1/transactions/cashins:
    post:
      operationId: "create-cashin"
      description: Add money into the wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCashinRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCashinResponse'
        409:
          description: The operation failed
      tags:
        - Transactions
      security:
        - api_key: [ 'payment-manage' ]

  /v1/transactions/cashouts:
    post:
      operationId: "create-cashout"
      description: Transfer money to a user's wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCashoutRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCashoutResponse'
        409:
          description: The operation failed
      tags:
        - Transactions
      security:
        - api_key: [ 'payment-manage' ]

  /v1/transactions/transfers:
    post:
      operationId: "create-transfer"
      description: Transfer money to another user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransferResponse'
        409:
          description: The operation failed
      tags:
        - Transactions
      security:
        - api_key: [ 'payment-manage' ]

  /v1/transactions/charges:
    post:
      operationId: "create-charge"
      description: Charge a customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChargeRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChargeResponse'
        409:
          description: The operation failed
      tags:
        - Transactions
      security:
        - api_key: [ 'payment-manage' ]

  /v1/transactions/fees:
    post:
      operationId: "compute-fees"
      description: Compute fees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputeFeesRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeFeesResponse'
        409:
          description: The operation failed
      tags:
        - Transactions
      security:
        - api_key: [ 'payment-manage' ]

  /v1/transactions/{id}:
    get:
      operationId: "get-transaction"
      description: Return a transaction
      parameters:
        - in: path
          name: id
          description: ID of the transaction
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionResponse'
        404:
          description: Transaction not found
      tags:
        - Transactions
      security:
        - api_key: [ 'payment-read' ]

  /v1/transactions/search:
    post:
      operationId: "search-transaction"
      description: Search transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTransactionRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransactionResponse'
        404:
          description: Transaction not found
      tags:
        - Transactions
      security:
        - api_key: [ 'payment-read' ]

  /v1/accounts/{account-id}/balance:
    get:
      operationId: "get-balance"
      description: Get balance of a user's account
      parameters:
        - in: path
          name: account-id
          description: ID of the account
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBalanceResponse'
      tags:
        - Account
      security:
        - api_key: [ 'payment-read' ]

components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    CreateCashinRequest:
      type: object
      properties:
        paymentMethodToken:
          type: string
          description: Token of account from where money will be debitted.
        amount:
          type: number
          format: double
          description: Amount to transfer to the user's wallet
          minimum: 0
        currency:
          type: string
          description: 3 letter currency code
          maxLength: 3
        idempotencyKey:
          type: string
          description: Idemportent Key
      required:
        - paymentMethodToken
        - currency
        - idempotencyKey

    CreateCashinResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the transaction
        status:
          description: Status of the charge
          type: string
          enum:
            - PENDING
            - SUCESS

    CreateCashoutRequest:
      type: object
      properties:
        paymentMethodToken:
          type: string
          description: Token of the account where money will be transfered.
        amount:
          type: number
          format: double
          description: Amout to transfer to the user's account.
          minimum: 0
        currency:
          type: string
          description: 3 letter currency code
          maxLength: 3
        idempotencyKey:
          type: string
          description: Idemportent Key
      required:
        - paymentMethodToken
        - currency
        - idempotencyKey

    CreateCashoutResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the transaction
        status:
          description: Status of the charge
          type: string
          enum:
            - PENDING
            - SUCESS

    CreateTransferRequest:
      type: object
      properties:
        recipientId:
          type: integer
          format: int64
          description: ID of the recipient of the transfer
        amount:
          type: number
          format: double
          description: Amout to transfer to the user's wallet
          minimum: 0
        currency:
          type: string
          description: 3 letter currency code
          maxLength: 3
        description:
          type: string
          description: Description of the transfer
          nullable: true
        idempotencyKey:
          type: string
          description: Idemportent Key
      required:
        - currency
        - idempotencyKey

    CreateTransferResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the transaction
        status:
          description: Status of the transaction
          type: string
          enum:
            - PENDING
            - SUCESS

    Balance:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the account
        userId:
          type: integer
          format: int64
          description: ID of the user who owns this balance
        amount:
          type: number
          format: double
          description: Balance of the account
        currency:
          type: string
          description: 3 letter currency code
        created:
          type: string
          description: Creation data-time
          format: date-time
        updated:
          type: string
          description: Date/Time of the last updated
          format: date-time

    GetBalanceResponse:
      type: object
      properties:
        balance:
          type: object
          $ref: "#/components/schemas/Balance"

    TransactionSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the transaction
        accountId:
          type: integer
          format: int64
          description: ID of the user who initiated the transaction
        recipientId:
          type: integer
          format: int64
          description: ID of the recipient of the transaction
          nullable: true
        type:
          type: string
          enum:
            - CASHIN
            - CASHOUT
            - TRANSFER
          description: Type of transaction
        paymentMethodToken:
          type: string
          description: Token of the payment method
          nullable: true
        paymentMethodProvider:
          type: string
          description: Type of payment provider
          nullable: true
        description:
          type: string
          description: Description of the transaction
          nullable: true
        amount:
          type: number
          format: double
          description: Amount of the transaction
        fees:
          type: number
          format: double
          description: Fees
        gatewayFees:
          type: number
          format: double
          description: Fees from Payment Gateway
        net:
          type: number
          format: double
          description: Net amount
        currency:
          type: string
          description: 3 letter currency code
        status:
          type: string
          enum:
            - SUCCESSFULL
            - PENDING
            - FAILED
          description: Status of the transaction
        errorCode:
          type: string
          description: Error code
          nullable: true
        supplierErrorCode:
          type: string
          description: Error code from supplier
          nullable: true
        created:
          type: string
          description: Creation data-time
          format: date-time
        orderId:
          type: string
          description: ID of the order associated with the transaction
          nullable: true
        applyFeesToSender:
          type: boolean
          description: Fees are apply to sender

    SearchTransactionRequest:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          nullable: true
        type:
          type: string
          enum:
            - CASHIN
            - CASHOUT
            - TRANSFER
          description: Type of transaction
          nullable: true
        status:
          type: array
          items:
            type: string
          description: Status of the transaction
        orderId:
          type: string
          description: Order ID
          nullable: true
        limit:
          type: integer
          default: 30
        offset:
          type: integer
          default: 0

    SearchTransactionResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/TransactionSummary"

    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the transaction
        tenantId:
          type: integer
          format: int64
          description: ID of the tenant
        accountId:
          type: integer
          format: int64
          description: ID of the user who initiated the transaction
        recipientId:
          type: integer
          format: int64
          description: ID of the recipient of the transaction
          nullable: true
        type:
          type: string
          enum:
            - CASHIN
            - CASHOUT
            - TRANSFER
          description: Type of transaction
        paymentMethodToken:
          type: string
          description: Token of the payment method
          nullable: true
        paymentMethodProvider:
          type: string
          description: Type of payment provider
          nullable: true
        description:
          type: string
          description: Description of the transaction
          nullable: true
        amount:
          type: number
          format: double
          description: Amount of the transaction
        fees:
          type: number
          format: double
          description: Fees
        gatewayFees:
          type: number
          format: double
          description: Fees from Payment Gateway
        net:
          type: number
          format: double
          description: Net amount
        currency:
          type: string
          description: 3 letter currency code
        status:
          type: string
          enum:
            - SUCCESSFULL
            - PENDING
            - FAILED
          description: Status of the transaction
        gatewayTransactionId:
          type: string
          description: Transaction ID from the payment gateway
          nullable: true
        financialTransactionId:
          type: string
          description: Transaction ID from the financial institution
          nullable: true
        errorCode:
          type: string
          description: Error code
          nullable: true
        supplierErrorCode:
          type: string
          description: Error code from supplier
          nullable: true
        created:
          type: string
          description: Creation data-time
          format: date-time
        orderId:
          type: string
          description: ID of the order associated with the transaction
          nullable: true
        applyFeesToSender:
          type: boolean
          description: Fees are apply to sender

    GetTransactionResponse:
      type: object
      properties:
        transaction:
          type: object
          $ref: "#/components/schemas/Transaction"

    PaymentRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the request
        accountId:
          type: number
          format: int64
          description: ID of the account who created the request
        amount:
          type: number
          format: double
          description: Amount requested
          minimum: 0
        currency:
          type: string
          description: Currency code
        description:
          type: string
          description: Description of the transaction
          nullable: true
          maxLength: 100
        orderId:
          type: string
          description: ID of the invoice associated with the payment
          nullable: true
          maxLength: 36
        created:
          type: string
          format: date-time
          description: Creation time

    CreateChargeRequest:
      type: object
      properties:
        paymentMethodToken:
          type: string
          description: Token of account from where money will be debitted. If not provided, the user's wallet will be debitted.
          nullable: true
        recipientId:
          type: integer
          format: int64
          description: ID of the recipient of the charge
        amount:
          type: number
          format: double
          description: Amount to transfer to the user's wallet
          minimum: 0
        currency:
          type: string
          description: 3 letter currency code
          maxLength: 3
        orderId:
          type: string
          description: ID of the order to charge
          nullable: true
        description:
          type: string
          description: Description of the transaction
          nullable: true
          maxLength: 100
        idempotencyKey:
          type: string
          description: Idemportent Key
      required:
        - currency
        - idempotencyKey

    CreateChargeResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the transaction
        status:
          description: Status of the charge
          type: string
          enum:
            - PENDING
            - SUCESS

    ComputeFeesRequest:
      type: object
      properties:
        transactionType:
          type: string
          enum:
            - CASHIN
            - CASHOUT
            - TRANSFER
            - CHARGE
        paymentMethodType:
          type: string
          enum:
            - MOBILE
            - BANK
          description: Type of Payment method
          nullable: true
        amount:
          type: number
          format: double
          description: Amount to transfer to the user's wallet
          minimum: 0
        currency:
          type: string
          description: 3 letter currency code
      required:
        - transactionType
        - currency

    ComputeFeesResponse:
      type: object
      properties:
        fee:
          type: object
          $ref: "#/components/schemas/TransactionFee"

    TransactionFee:
      type: object
      properties:
        amount:
          type: number
          format: double
          description: Amount to transfer to the user's wallet
        fees:
          type: number
          format: double
          description: Total fees
        applyFeesToSender:
          type: boolean
          description: Fees are apply to sender
        senderAmount:
          type: number
          format: double
          description: Amount that will be applied to sender
        recipientAmount:
          type: number
          format: double
          description: Amount that will be applied to recipient
        currency:
          type: string
          description: 3 letter currency code
      required:
        - transactionType
        - currency
